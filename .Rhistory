setwd("../../book-change-detection/")
# Recursos ----------------------------------------------------------------
source("R/DI.R")
source("R/graphics.R")
source("R/functions.R")
source("R/utils_image.R")
source("R/Douglas-Peucker.R")
source("R/log_mean_ratio.R")
# Paletas -----------------------------------------------------------------
palette_grey <- grey(1:100/100)
palette_rainbow <- rainbow(100)
img1 <- raster("data/turberas/tif/ST_001/S1_GRD_SAR_VH_2017.tif")
img2 <- raster("data/turberas/tif/ST_001/S1_GRD_SAR_VH_2023.tif")
plot(img1, col=palette_grey)
plot(img2, col=palette_grey)
plot(img1, col=palette_grey)
plot(img2, col=palette_grey)
# RGB
st_2017 <- stack("results/ST_001/ST_001-2017_reproy.tif")
st_2022 <- stack("results/ST_001/ST_001-2022_reproy.tif")
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3)
library(mapview)
# RGB
st_2017 <- stack("results/ST_001/ST_001-2017_reproy.tif")
st_2022 <- stack("results/ST_001/ST_001-2022_reproy.tif")
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3)
m_2022 <- viewRGB(st_2023, r = 1, g = 2, b = 3)
# Librerias ---------------------------------------------------------------
library(raster)
library(mapview)
# RGB
st_2017 <- stack("results/ST_001/ST_001-2017_reproy.tif")
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3)
m_2017
st_2022
m_2022 <- viewRGB(st_2023, r = 1, g = 2, b = 3)
m_2022 <- viewRGB(st_2022, r = 1, g = 2, b = 3)
rgb_img <- m_2017+m_2022
rgb_img
path_out = "results/ST_001"
name = "RGB_roi"
paste0(path_out, "/", name,".html")
path_out = "results/ST_001/"
paste0(path_out, "/", name,".html")
path_out_html <- paste0(path_out, "/", name,".html") %>%
gsub(patter="//", replacement = "/", .)
path_out_html
make_map_web <- function(map, name, path_out, show=T){
path_out_html <- paste0(path_out, "/", name,".html") %>%
gsub(patter="//", replacement = "/", .)
mapview::mapshot(map, url = path_out_html)
if(isTRUE(show)){
utils::browseURL(path_out_html)
}
}
make_map_web(map = rgb_img, name = "RGB_roi", path_out = "results/ST_001/")
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, na.color =NA)
m_2017
rgb_img <- m_2017+m_2022
make_map_web(map = rgb_img, name = "RGB_roi", path_out = "results/ST_001/")
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017")
m_2022 <- viewRGB(st_2022, r = 1, g = 2, b = 3, layer.name = "RBG_2022")
rgb_img <- m_2017+m_2022
make_map_web(map = rgb_img, name = "RGB_roi", path_out = "results/ST_001/")
path_out_html
print(paste0("Mapa web guardado en", path_out_html))
print(paste0("Mapa web guardado en: \n", path_out_html))
print(paste0("Mapa web guardado en: ", path_out_html))
make_map_web <- function(map, name, path_out, show=T){
path_out_html <- paste0(path_out, "/", name,".html") %>%
gsub(patter="//", replacement = "/", .)
mapview::mapshot(map, url = path_out_html)
if(isTRUE(show)){
utils::browseURL(path_out_html)
}
print(paste0("Mapa web guardado en: ", path_out_html))
}
make_map_web(map = rgb_img, name = "RGB_roi", path_out = "results/ST_001/")
# MC: Diferencia Directa --------------------------------------------------
dd <- raster("results/ST_001/DD.tif")
dd
img1 <- raster("data/turberas/tif/ST_001/S1_GRD_SAR_VH_2017.tif")
img2 <- raster("data/turberas/tif/ST_001/S1_GRD_SAR_VH_2023.tif")
plot(img1, col=palette_grey)
plot(img2, col=palette_grey)
sar_map <- mapview(img1) + mapview(img2)
make_map_web(map = sar_map, name = "SAR_roi", path_out = "results/ST_001/")
map_dd <- rgb_img+dd
make_map_web(map = map_dd, name = "DD_roi", path_out = "results/ST_001/")
before_img <- as.matrix(img1)
image_after <- as.matrix(img2)
dd <-  diff_image(image_before = before_img, image_after = image_after)
dd
dd_raster <- matrix(data = dd, ncol = ncol(img1),
nrow = nrow(img1)) %>%
raster()
dd_r <- img1
values(dd_r) <- as.vector(dd_raster)
dd_r
values(dd_r) <- as.vector(dd_raster)
mapview(dd_r)
write_img(image = dd_r, name = "DD",
path_out = "results/ST_001")
# MC: Diferencia Directa --------------------------------------------------
dd <- raster("results/ST_001/DD.tif")
map_dd <- rgb_img+dd
make_map_web(map = map_dd, name = "DD_roi", path_out = "results/ST_001/")
mh_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017", hide=T)
mh_2022 <- viewRGB(st_2022, r = 1, g = 2, b = 3, layer.name = "RBG_2022", hide=T)
map_rbg <- mh_2017+mh_2022
map_dd <- map_rbg + mapview(dd)
mh_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017", hide=T)
map_dd <- map_rgb + mapview(dd)
map_rgb <- mh_2017+mh_2022
mh_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017", hide=T)
mh_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017")
mh_2022 <- viewRGB(st_2022, r = 1, g = 2, b = 3, layer.name = "RBG_2022", hide=T)
map_img
dd_th <- raster("results/DD_PAD_GTE1.tif")
dd_th <- raster("results/ST_001/DD_PAD_GTE1.tif")
dd_th
dd_th[dd_th ==0] <- NA
mapview(dd_th, na.color =NA, alpha = 0.5)
dd_th
mapview(dd_th, na.color =NA, alpha = 0.5, legend=F)
mdd_th <- mapview(dd_th, na.color =NA, alpha = 0.5, legend=F)
map_dd <- rgb_img + mapview(dd)+mdd_th
make_map_web(map = map_dd, name = "DD_roi", path_out = "results/ST_001/")
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017",
na.color = "transparent", quantiles = NULL)
m_2017
# set all values with 0 to NA
vals = values(st_2017)
idx = which(rowSums(vals) == 0)
vals[idx, ] = cbind(NA, NA, NA)
st_2017 = setValues(st_2017, vals)
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017",
na.color = "transparent", quantiles = NULL)
m_2017
st_2017
# RGB
st_2017 <- terra::rast("results/ST_001/ST_001-2017_reproy.tif") %>%
raster::brick() %>%
subset(c(1, 2, 3))
# RGB
st_2017 <- terra::rast("results/ST_001/ST_001-2017_reproy.tif") %>%
raster::brick() %>%
subset(c(1, 2, 3))
# set all values with 0 to NA
vals = values(st_2017)
idx = which(rowSums(vals) == 0)
vals[idx, ] = cbind(NA, NA, NA)
st_2017 = setValues(st_2017, vals)
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017",
na.color = "transparent", quantiles = NULL)
m_2017
delete_black <- function(path_tif){
img_rbg <- terra::rast(path_tif) %>%
raster::brick() %>%
subset(c(1, 2, 3))
# set all values with 0 to NA
vals = values(img_rbg)
idx = which(rowSums(vals) == 0)
vals[idx, ] = cbind(NA, NA, NA)
img_rbg = setValues(img_rbg, vals)
return(img_rbg)
}
# RGB
st_2017 <- delete_black("results/ST_001/ST_001-2017_reproy.tif")
st_2022 <- stack("results/ST_001/ST_001-2022_reproy.tif")
st_2022 <- delete_black("results/ST_001/ST_001-2022_reproy.tif")
m_2017 <- viewRGB(st_2017, r = 1, g = 2, b = 3, layer.name = "RBG_2017",
na.color = "transparent", quantiles = NULL)
m_2022 <- viewRGB(st_2022, r = 1, g = 2, b = 3, layer.name = "RBG_2022",
na.color = "transparent", quantiles = NULL)
rgb_img <- m_2017+m_2022
make_map_web(map = rgb_img, name = "RGB_roi", path_out = "results/ST_001/")
# MC: Diferencia Directa --------------------------------------------------
dd <- raster("results/ST_001/DD.tif")
dd_th <- raster("results/ST_001/DD_PAD_GTE1.tif")
dd_th[dd_th ==0] <- NA
mdd_th <- mapview(dd_th, na.color =NA, alpha = 0.5, legend=F)
map_dd <- rgb_img + mapview(dd)+mdd_th
make_map_web(map = map_dd, name = "DD_roi", path_out = "results/ST_001/")
rcrossref:::crAddins()
citr:::insert_citation()
# MC: Diferencia Directa --------------------------------------------------
lr <- raster("results/ST_001/DLR.tif")
lr
mapview(DLR)
mapview(lr)
map_lr <- rgb_img + mapview(lr)
map_lr <- rgb_img + mapview(lr)
make_map_web(map = map_lr, name = "LR_roi", path_out = "results/ST_001/")
# Define the radius of the neighborhood
r <- 9
# Define the kernel
kernel <- matrix(1, nrow=r, ncol=r)
d_llr <-  log_likelihood_ratio(img1, img2, kernel = kernel)
d_llr <- scale(d_llr, center = 0)
d_llr
mapview(d_llr)
write_img(image = d_llr, name = "LLR",
path_out = "results/ST_001")
tif2png("results/ST_001/LLR.tif")
llr <- raster("results/ST_001/LLR.tif")
map_llr <- rgb_img + mapview(llr)
make_map_web(map = map_llr, name = "LLR_roi", path_out = "results/ST_001/")
edi <- raster("results/ST_001/EDI.tif")
edi <- raster("results/ST_001/EDI.tif")
map_edi <- rgb_img + mapview(edi)
make_map_web(map = map_edi, name = "EDI_roi", path_out = "results/ST_001/")
edi <- raster("results/ST_001/EDI.tif")
map_edi <- rgb_img + mapview(edi)
make_map_web(map = map_edi, name = "EDI_roi", path_out = "results/ST_001/")
# d_lr <- calc(d_lr, fun = inf_na)
edi <-  enhanced_difference(d_lr, d_llr)
edi
edi_cp <- edi
edi_cp[edi_cp < 0.01] <- NA
mapview(edi_cp,  na.color =NA, alpha = 0.8)
# d_lr <- calc(d_lr, fun = inf_na)
edi <-  enhanced_difference(d_lr, d_llr)
edi <- scale(edi)
mapview(edi,  na.color =NA, alpha = 0.8)
# d_lr <- calc(d_lr, fun = inf_na)
edi <-  enhanced_difference(d_lr, d_llr)
edi <- scale(edi)
mapview(edi,  na.color =NA, alpha = 0.8)
write_img(image = edi, name = "EDI",
path_out = "results/ST_001")
tif2png("results/ST_001/EDI.tif")
ed_mod <- calc(edi, fun = keep_outliers)
plot_raster_g(ed_mod, title_g ="Enhanced difference image (EDI) - Ouliers")
ed_mod <- calc(edi, fun = keep_outliers)
plot_raster_g(ed_mod, title_g ="Enhanced difference image (EDI) - Ouliers")
write_img(image = ed_mod, name = "EDI_Outliers",
path_out = "results/ST_001")
tif2png("results/ST_001/EDI_Outliers.tif")
edi_out <- raster("results/ST_001/EDI_Outliers.tif")
mapview(edi_out)
edi <- raster("results/ST_001/EDI.tif")
edi_out <- raster("results/ST_001/EDI_Outliers.tif")
map_edi <- rgb_img + mapview(edi)+mapview(edi_out)
make_map_web(map = map_edi, name = "EDI_roi", path_out = "results/ST_001/")
write_img(image = edi, name = "EDI",
path_out = "results/ST_001")
tif2png("results/ST_001/EDI.tif")
write_img(image = edi, name = "EDI",
path_out = "results/ST_001")
# d_lr <- calc(d_lr, fun = inf_na)
edi <-  enhanced_difference(d_lr, d_llr)
edi <- scale(edi)
write_img(image = edi, name = "EDI",
path_out = "results/ST_001")
tif2png("results/ST_001/EDI.tif")
edi <- raster("results/ST_001/EDI.tif")
mapview(edi)
edi <- scale(edi)
mapview(edi,  na.color =NA, alpha = 0.8)
# d_lr <- calc(d_lr, fun = inf_na)
edi <-  enhanced_difference(d_lr, d_llr)
edi <- scale(edi)
write_img(image = edi, name = "EDI",
path_out = "results/ST_001")
tif2png("results/ST_001/EDI.tif")
edi <- raster("results/ST_001/EDI.tif")
edi_out <- raster("results/ST_001/EDI_Outliers.tif")
map_edi <- rgb_img + mapview(edi)+mapview(edi_out)
make_map_web(map = map_edi, name = "EDI_roi", path_out = "results/ST_001/")
edi
edi_matrix = edi_mod %>% as.matrix()
dp_clases <- triangular_threshold_segmentation(edi_matrix)
umbral = dp_clases$threshold
menor <- dp_clases$leq_th %>% raster()
mayor <- dp_clases$gt_th %>% raster()
plot(menor, col=palette_grey, main = "EDI bajo el umbral triangular")
edi_mod = scaleRaster(edi)
edi_matrix = edi_mod %>% as.matrix()
dp_clases <- triangular_threshold_segmentation(edi_matrix)
umbral = dp_clases$threshold
umbral
menor <- dp_clases$leq_th %>% raster()
menor
mayor
m
mayor <- dp_clases$gt_th %>% raster()
plot(menor, col=palette_grey, main = "EDI bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "EDI sobre el umbral triangular")
dd_raster <-  scaleRaster(dd_raster, max = 255)
d_direct_matrix <- matrix(data = dd_raster, ncol = ncol(img1),
nrow = nrow(img1), byrow = T)
dp_dd <- triangular_threshold_segmentation(d_direct_matrix)
umbral = dp_dd$threshold
umbral
menor <- dp_dd$leq_th %>% raster()
menor
plot(menor, col=palette_grey, main = "DD bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "DD sobre el umbral triangular")
plot(menor, col=palette_grey, main = "DD bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "DD sobre el umbral triangular")
plot(menor, col=palette_grey, main = "DD bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "DD sobre el umbral triangular")
plot(menor, col=palette_grey, main = "DD bajo el umbral triangular")
plot(1-menor, col=palette_grey, main = "DD bajo el umbral triangular")
plot(menor, col=palette_grey, main = "EDI bajo el umbral triangular")
plot(1-menor, col=palette_grey, main = "EDI bajo el umbral triangular")
dp_clases <- triangular_threshold_segmentation(edi_matrix)
umbral = dp_clases$threshold
menor <- dp_clases$leq_th %>% raster()
mayor <- dp_clases$gt_th %>% raster()
plot(1-menor, col=palette_grey, main = "EDI bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "EDI sobre el umbral triangular")
plot(menor, col=palette_grey, main = "EDI bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "EDI sobre el umbral triangular")
dp_dd <- triangular_threshold_segmentation(d_direct_matrix)
umbral = dp_dd$threshold
menor <- dp_dd$leq_th %>% raster()
mayor <- dp_dd$gt_th %>% raster()
plot(1-menor, col=palette_grey, main = "DD bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "DD sobre el umbral triangular")
plot(mayor, col=palette_grey, main = "DD sobre el umbral triangular")
dp_clases <- triangular_threshold_segmentation(edi_matrix)
umbral = dp_clases$threshold
edi_mod = scaleRaster(edi)
edi_matrix = edi_mod %>% as.matrix()
dp_clases <- triangular_threshold_segmentation(edi_matrix)
dp_clases_edi <- triangular_threshold_segmentation(edi_matrix)
dp_clases <- triangular_threshold_segmentation(edi_matrix)
dp_clases <- triangular_threshold_segmentation(edi_matrix)
umbral_edi = dp_clases$threshold
menor_edi <- dp_clases$leq_th %>% raster()
mayor_edi <- dp_clases$gt_th %>% raster()
plot(menor_edi, col=palette_grey, main = "EDI bajo el umbral triangular")
plot(mayor_edi, col=palette_grey, main = "EDI sobre el umbral triangular")
dp_clases <- triangular_threshold_segmentation(edi_matrix)
umbral_edi = dp_clases$threshold
menor_edi <- dp_clases$leq_th %>% raster()
mayor_edi <- dp_clases$gt_th %>% raster()
plot(menor_edi, col=palette_grey, main = "EDI bajo el umbral triangular")
plot(mayor_edi, col=palette_grey, main = "EDI sobre el umbral triangular")
dd_raster <-  scaleRaster(dd_raster, max = 255)
d_direct_matrix <- matrix(data = dd_raster, ncol = ncol(img1),
nrow = nrow(img1), byrow = T)
dp_dd <- triangular_threshold_segmentation(d_direct_matrix)
mayor_dd <- dp_dd$gt_th %>% raster()
plot(mayor_dd, col=palette_grey, main = "DD sobre el umbral triangular")
plot_raster_g(mayor_edi,
title_g ="EDI sobre el umbral triangular",
palette_col = palette_grey)
plot_raster_g(mayor_dd,
title_g ="DD sobre el umbral triangular",
palette_col = palette_grey)
mayor_dd
setValues(mayor_dd)
mayor_dd2 <- setValues(img,rast(mayor_dd))
mayor_dd2 <- setValues(img, values(mayor_dd))
mayor_dd2 <- setValues(img1, values(mayor_dd))
mayor_dd2
maview(mayor_dd2)
mapview(mayor_dd2)
mayor_edi[mayor_edi == 0] <- NA
mapview(mayor_edi)
mayor_edi <- dp_clases$gt_th %>% raster()
mayor_edi <- setValues(img1, values(mayor_edi))
mayor_edi[mayor_edi == 0] <- NA
mapview(mayor_edi)
dd_th <- raster("results/ST_001/DD_PAD_GTE1.tif")
dd_th[dd_th ==0] <- NA
mdd_th <- mapview(dd_th, na.color =NA, alpha = 0.5, legend=F)
mdd_th
write_img(image = mayor_edi, name = "TTS_EDI",
path_out = "results/ST_001")
dp_dd <- triangular_threshold_segmentation(d_direct_matrix)
umbral_dd = dp_dd$threshold
menor_dd <- dp_dd$leq_th %>% raster()
mayor_dd <- dp_dd$gt_th %>% raster()
mayor_dd <- setValues(img1, values(mayor_dd))
mayor_dd[mayor_dd == 0] <- NA
mapview(mayor_dd)
mapview(mayor_dd,  na.color =NA )
write_img(image = mayor_dd, name = "TTS_DD",
path_out = "results/ST_001")
tts_edi <- raster("results/ST_001/TTS_EDI.tif")
tts_dd <- raster("results/ST_001/TTS_DD.tif")
map_tts <- rgb_img + mapview(tts_edi, na.color =NA,  col.regions ="darkgreen")+
mapview(tts_edi, na.color =NA, col.regions ="orange")
map_tts
map_tts <- rgb_img + mapview(tts_edi, na.color =NA,  col.regions ="darkgreen")+
mapview(tts_dd, na.color =NA, col.regions ="orange")
map_tts
map_tts <- rgb_img + mapview(tts_edi, na.color = NA,  col.regions ="yellow")+
mapview(tts_dd, na.color =NA, col.regions ="orange")
make_map_web(map = map_edi, name = "EDI_roi", path_out = "results/ST_001/")
make_map_web(map = map_tts, name = "TTS_roi", path_out = "results/ST_001/")
map_edi <- rgb_img + mapview(edi)+mapview(edi_out,  na.color = NA)
make_map_web(map = map_edi, name = "EDI_roi", path_out = "results/ST_001/")
umbral_edi
umbral_dd
lmr <- raster("results/ST_001/LMR.tif")
map_lmr <- rgb_img + mapview(lmr, na.color = NA)
map_lmr
lmr <- raster("results/ST_001/LMR.tif")
map_lmr <- rgb_img + mapview(lmr, na.color = NA)
map_lmr
neighbourhood_size <- 3
lmr_matrix <- lmr_neighbourhood(img1, img2, neighbourhood_size)
lmr_raster <- raster(lmr_matrix)
lmr_raster
lmr_r <- setValues(img1, values(lmr_raster))
lmr_r
lmr_r2 <- scale(lmr_r)
lmr_r2
mapview(lmr,  na.color =NA, alpha = 0.8)
write_img(image = lmr_r, name = "LMR",
path_out = "results/ST_001")
tif2png("results/ST_001/LMR.tif")
lmr_mod <- scaleRaster(lmr, max = 255)
edi_matrix = lmr_mod %>% as.matrix()
dp_clases <- triangular_threshold_segmentation(edi_matrix)
umbral = dp_clases$threshold
menor <- dp_clases$leq_th %>% raster()
mayor <- dp_clases$gt_th %>% raster()
plot(menor, col=palette_grey, main = "EDI bajo el umbral triangular")
plot(mayor, col=palette_grey, main = "EDI sobre el umbral triangular")
lmr <- raster("results/ST_001/LMR.tif")
map_lmr <- rgb_img + mapview(lmr, na.color = NA)
map_lmr
make_map_web(map = map_lmr, name = "LMR_roi", path_out = "results/ST_001/")
lmr_cp <- lmr_r
lmr_cp[lmr_cp < 0.1] <- NA
mapview(lmr,  na.color =NA, alpha = 0.8)
mapview(lmr_cp,  na.color =NA, alpha = 0.8)
lmr_cp <- lmr_r
lmr_cp[lmr_cp < 0.1] <- NA
mapview(lmr_cp,  na.color =NA, alpha = 0.8)
write_img(image = lmr_cp, name = "LMR_th",
path_out = "results/ST_001")
lmr_th <- raster("results/ST_001/LMR.tif")
map_lmr <- rgb_img + mapview(lmr, na.color = NA)+ mapview(lmr_th, na.color = NA)
make_map_web(map = map_lmr, name = "LMR_roi", path_out = "results/ST_001/")
write_img(image = lmr_r, name = "LMR",
path_out = "results/ST_001")
tif2png("results/ST_001/LMR.tif")
lmr_r <- setValues(img1, values(lmr_raster))
lmr_cp <- lmr_r
lmr_cp[lmr_cp < 0.1] <- NA
mapview(lmr_cp,  na.color =NA, alpha = 0.8)
write_img(image = lmr_cp, name = "LMR_th",
path_out = "results/ST_001")
lmr_th <- raster("results/ST_001/LMR_th.tif")
map_lmr <- rgb_img + mapview(lmr, na.color = NA)+ mapview(lmr_th, na.color = NA)
make_map_web(map = map_lmr, name = "LMR_roi", path_out = "results/ST_001/")
pca_kmenas_r <- setValues(img1, values(pca_kmenas))
#| label: fig-pPCAkmean
#| fig-cap: "Resultado  del PCA K-Means de la Imagen de Diferencias"
#|
pca_kmenas <-  raster("results/ST_001/PCAK_EDI.tif")
pca_kmenas_r <- setValues(img1, values(pca_kmenas))
pca_kmenas_r
mapview(pca_kmenas_r)
plot_raster_g(pca_kmenas, palette_col = palette_grey,
title_g = "PCA K-Means de la Imagen de Diferencias" )
hist_raster(pca_kmenas, title_g = "pca_kmenas")
plot(pca_kmenas, col=palette_grey)
pca_kmenas <-  rast(pca_kmenas)
pca_kmenas <- padding_mean(pca_kmenas, padding_size = 1, n_matrix= 3)
plot(pca_kmenas, col=palette_grey)
reticulate::source_python('~/Library/CloudStorage/OneDrive-UniversidadAdolfoIbanez/MasterDataScience/tesis/CNN-Change-Detection/book-change-detection/python/PCAKmeans/main.py')
reticulate::source_python('~/Library/CloudStorage/OneDrive-UniversidadAdolfoIbanez/MasterDataScience/tesis/CNN-Change-Detection/book-change-detection/python/PCAKmeans/main.py')
hist_raster(pca_kmenas, title_g = "pca_kmenas")
mapview(pca_kmenas_r)
pca_kmenas_r[pca_kmenas_r<1] <- NA
write_img(image = pca_kmenas_r, name = "PCAK_EDI",
path_out = "results/ST_001")
mapview(pca_kmenas_r)
pcak_edi <- raster("results/ST_001/PCAK_EDI.tif")
map_pcak_edi <- rgb_img + mapview(pcak_edi, na.color = NA)
map_pcak_edi
map_pcak_edi <- rgb_img + mapview(pcak_edi, na.color = NA, col.region="orange")
map_pcak_edi
make_map_web(map = map_lmr, name = "LMR_roi", path_out = "results/ST_001/")
make_map_web(map = map_pcak_edi, name = "PCAK_EDI_roi", path_out = "results/ST_001/")
library(mapview)
composite <-  stack(img1, img2, img1)
viewRGB(composite, r = 3, g = 2, b = 1)
differenceVH <- img2/img1
mapview(differenceVH)
differenceVH_cp <- differenceVH
differenceVH_cp[differenceVH_cp < 1.15] <- NA
mapview(differenceVH_cp,  na.color =NA, alpha = 0.8)
mapview(differenceVH)
write_img(image = differenceVH, name =  "DIV_VH",
path_out = "results/ST_001")
tif2png("results/ST_001/DIV_VH.tif")
differenceVH
differenceVH <- scale(differenceVH)
differenceVH
write_img(image = differenceVH, name =  "DIV_VH",
path_out = "results/ST_001")
tif2png("results/ST_001/DIV_VH.tif")
differenceVH <- img2/img1
differenceVH <- img2/img1
differenceVH <- scaleRaster(differenceVH)
mapview(differenceVH)
write_img(image = differenceVH, name =  "DIV_VH",
path_out = "results/ST_001")
tif2png("results/ST_001/DIV_VH.tif")
differenceVH <- img2/img1
differenceVH <- scaleRaster(differenceVH)
differenceVH
mapview(differenceVH)
